name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Fail build if quality gate fails
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install and Run Trivy (Filesystem Scan)
        run: |
          sudo apt-get update && sudo apt-get install -y wget gnupg lsb-release apt-transport-https
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy
          trivy fs .

      - name: Docker Build and Push to Docker Hub
        run: |
          docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_API_KEY }} -t netflix .
          docker tag netflix elviedjomo/netflix:latest
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push elviedjomo/netflix:latest
        env:
          DOCKER_CLI_ACI: 1

  deploy:
    name: Deploy on EC2
    needs: build
    runs-on: name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Fail build if quality gate fails
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install and Run Trivy (Filesystem Scan)
        run: |
          sudo apt-get update && sudo apt-get install -y wget gnupg lsb-release apt-transport-https
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy
          trivy fs .

      - name: Docker Build and Push to Docker Hub
        run: |
          docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_API_KEY }} -t netflix .
          docker tag netflix elviedjomo/netflix:latest
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push elviedjomo/netflix:latest
        env:
          DOCKER_CLI_ACI: 1

  deploy:
    name: Deploy on EC2
    needs: build
    runs-on: [aws-netflix]  # Self-hosted EC2 runner
    timeout-minutes: 10

    steps:
      - name: Show Docker Status (Pre-deploy)
        run: docker ps -a

      - name: Remove Old Container (if exists)
        run: docker rm -f netflix || true

      - name: Prune Unused Docker Resources
        run: docker system prune -f

      - name: Pull Latest Docker Image
        run: docker pull elviedjomo/netflix:latest

      - name: Trivy Image Scan
        run: trivy image elviedjomo/netflix:latest

      - name: Run Docker Container
        run: docker run -d --name netflix -p 8081:80 elviedjomo/netflix:latest
  # Self-hosted EC2 runner
    timeout-minutes: 10

    steps:
      - name: Show Docker Status (Pre-deploy)
        run: docker ps -a

      - name: Remove Old Container (if exists)
        run: docker rm -f netflix || true

      - name: Prune Unused Docker Resources
        run: docker system prune -f

      - name: Pull Latest Docker Image
        run: docker pull elviedjomo/netflix:latest

      - name: Trivy Image Scan
        run: trivy image elviedjomo/netflix:latest

      - name: Run Docker Container
        run: docker run -d --name netflix -p 8081:80 elviedjomo/netflix:latest
